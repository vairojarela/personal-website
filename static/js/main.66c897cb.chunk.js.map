{"version":3,"sources":["components/TopBar.js","components/Experience.js","components/Education.js","components/Profile.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["TopBar","props","toggle","bind","state","isOpen","this","setState","Navbar","color","dark","expand","Container","NavbarBrand","href","src","className","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","React","Component","getDuration","duration","years","parseInt","months","Experience","Row","Col","profile","experiences","map","experience","i","moment","locale","totalDuration","roles","reduce","cnt","role","startDate","timeEnd","currentJob","Date","endDate","diff","Number","asMonths","toPrecision","key","Media","left","top","url","object","logo","companyName","body","heading","title","format","location","description","Education","studies","study","institute","graduationYear","durationInYears","value","certifications","certification","verification","verificationLink","issueDate","expiryDate","issuer","Profile","activeTab","tab","Jumbotron","title1","summary","likes","Progress","animated","multi","striped","bar","tabs","classnames","active","TabContent","TabPane","tabId","Footer","target","icon","faLinkedin","faGithub","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.66c897cb.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <Navbar color=\"dark\" dark expand=\"md\">\n                <Container>\n                    <NavbarBrand href=\"/\">\n                        <img src='images/jairo.jpg' className=\"profile-pic\" alt=\"Jairo Varela\" />\n                        <span>Jairo Varela</span>\n                    </NavbarBrand>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink href=\"/profile/\">Profile</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Container>\n            </Navbar>\n        );\n    }\n}\n\nexport default TopBar;","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport profile from \"../profile\";\nimport moment from \"moment\";\nimport { Media } from \"reactstrap\";\n\nfunction getDuration(duration) {\n    const years = parseInt(duration / 12);\n    const months = (duration > 12) ? duration % 12 : duration\n    return (years > 0 ? years + \" year\" + (years > 1 ? \"s\" : \"\") + \" and \" : \"\") + (months > 0 ? months + \" month\" + (months > 1 ? \"s\" : \"\") : \"\");\n};\n\nclass Experience extends React.Component {\n    render() {\n        return <Container>\n            <Row>\n                <Col>\n                    {profile.experiences.map(function (experience, i) {\n                        moment.locale('en');\n\n                        const totalDuration = experience.roles.reduce(function (cnt, role) {\n                            const startDate = moment(role.startDate);\n                            const timeEnd = moment(role.currentJob ? new Date() : new Date(role.endDate));\n                            const duration = moment.duration(timeEnd.diff(startDate));\n                            return Number(cnt) + Number(duration.asMonths().toPrecision(1));\n                        }, 0);\n\n                        return (\n                            <div key={i}>\n                                <Media>\n                                    <Media left top href={experience.url}>\n                                        <Media object src={experience.logo} alt={experience.companyName} />\n                                    </Media>\n                                    <Media body>\n                                        <Media heading>\n                                            <a href={experience.url}>{experience.companyName}</a>\n                                            <span className=\"jobTotalDuration\">{getDuration(totalDuration)}</span>\n                                        </Media>\n\n                                        {experience.roles.map(function (role, i) {\n                                            const startDate = moment(role.startDate);\n                                            const timeEnd = moment(role.currentJob ? new Date() : new Date(role.endDate));\n                                            const duration = Number(moment.duration(timeEnd.diff(startDate)).asMonths().toPrecision(1));\n\n                                            return <div key={i}>\n                                                <h5>{role.title}</h5>\n                                                <span\n                                                    className=\"jobDuration\">{startDate.format('MMM YYYY')} - {role.currentJob ? 'Present' : timeEnd.format('MMM YYYY')} ({getDuration(duration)})</span>\n                                                <span className=\"jobLocation\">{role.location}</span>\n                                                <p className=\"jobDescription\">{role.description}</p>\n                                            </div>\n                                        })}\n                                    </Media>\n                                </Media>\n                            </div>\n                        );\n                    })}\n                </Col>\n            </Row>\n        </Container>\n    }\n}\n\nexport default Experience;","import React from 'react';\nimport { Container, Row, Col, Media } from 'reactstrap';\nimport moment from 'moment';\nimport profile from '../profile.json';\n\nclass Education extends React.Component {\n    render() {\n        return <Container>\n            <Row>\n                <Col>\n                    {profile.studies.map(function (study, i) {\n                        return <Media key={i}>\n                            <Media left top href={study.url}>\n                                <Media object src={study.logo} alt={study.institute} />\n                            </Media>\n                            <Media body>\n                                <Media heading>\n                                    <a href={study.url}>{study.institute}</a>\n                                </Media>\n                                {\n                                    [\n                                        {\n                                            \"key\": \"Title\",\n                                            \"value\": study.title\n                                        },\n                                        {\n                                            \"key\": \"Graduation Year\",\n                                            \"value\": study.graduationYear\n                                        },\n                                        {\n                                            \"key\": \"Duration\",\n                                            \"value\": study.durationInYears + \" year(s)\"\n                                        }\n                                    ].map(function (object, i) {\n                                        return <div>\n                                            <Row>\n                                                <Col className=\"formLabel\">{object.key}:</Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>{object.value}</Col>\n                                            </Row>\n                                        </div>\n                                    })\n                                }\n                            </Media>\n                        </Media>\n                    })}\n                </Col>\n            </Row>\n            <br />\n            <br />\n            <Row>\n                <Col>\n                    <h4>Certifications:</h4>\n                    <hr />\n                    {profile.certifications.map(function (certification, i) {\n                        const verification = certification.verificationLink ?\n                            <Row>\n                                <Col>\n                                    <a className=\"certificateLink\" href={certification.verificationLink}>See certificate</a>\n                                </Col>\n                            </Row> : \"\";\n                        return <Media key={i}>\n                            <Media left top href={certification.url}>\n                                <Media object src={certification.logo} alt={certification.title} />\n                            </Media>\n                            <Media body>\n                                <Media heading>\n                                    <a href={certification.url}>{certification.title}</a>\n                                </Media>\n                                <Row>\n                                    <Col>{moment(certification.issueDate).format('MMM YYYY')} - {(certification.expiryDate) ? moment(certification.expiryDate).format('MMM YYYY') : 'Present'}</Col>\n                                </Row>\n                                <Row>\n                                    <Col>{certification.issuer}</Col>\n                                </Row>\n                                {verification}\n                            </Media>\n                        </Media>\n                    })}\n                </Col>\n            </Row>\n        </Container>\n    }\n}\n\nexport default Education;","import React from 'react';\nimport { Progress, Jumbotron, Container, TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport classnames from 'classnames';\nimport Experience from \"./Experience\";\nimport Education from './Education'\nimport Skills from './Education'\nimport profile from '../profile.json'\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            activeTab: '1'\n        };\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    render() {\n        return <div>\n            <Jumbotron>\n                <Container>\n                    <h1 className=\"display-3 typewriter typewriter-text\">{profile.title1}</h1>\n                    <p className=\"lead\">{profile.summary}</p>\n                    <p className=\"lead\">{profile.likes}</p>\n                    <Progress animated multi>\n                        <Progress striped bar color=\"warning\" value=\"40\">\n                            Javascript\n                        </Progress>\n                        <Progress striped bar color=\"success\" value=\"20\">\n                            Python\n                        </Progress>\n                        <Progress striped bar color=\"danger\" value=\"20\">\n                            PHP\n                        </Progress>\n                        <Progress striped bar value=\"20\">\n                            CSS\n                        </Progress>\n                    </Progress>\n                </Container>\n            </Jumbotron>\n\n            <Container>\n                <Nav tabs>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '1' })}\n                            onClick={() => { this.toggle('1'); }}>\n                            Experience\n            </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '2' })}\n                            onClick={() => { this.toggle('2'); }}>\n                            Education\n            </NavLink>\n                    </NavItem>\n                    {/*   <NavItem>\n                        <NavLink className={classnames({ active: this.state.activeTab === '3' })}\n                            onClick={() => { this.toggle('3'); }}>\n                            Skills\n            </NavLink>\n                    </NavItem> */}\n                </Nav>\n                <TabContent activeTab={this.state.activeTab}>\n                    <TabPane tabId=\"1\">\n                        <Experience />\n                    </TabPane>\n                    <TabPane tabId=\"2\">\n                        <Education />\n                    </TabPane>\n                    <TabPane tabId=\"3\">\n                        <Skills />\n                    </TabPane>\n                </TabContent>\n            </Container>\n        </div>;\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport { Container } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons'\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <footer>\n                <hr />\n                <Container>\n                    <a target=\"__blank\" href=\"https://www.linkedin.com/in/jairo-varela/\"><FontAwesomeIcon icon={faLinkedin} /></a>\n                    <a target=\"__blank\" href=\"https://github.com/vairojarela\"><FontAwesomeIcon icon={faGithub} /></a>\n                </Container>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport TopBar from './components/TopBar';\nimport Profile from './components/Profile';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TopBar />\n        <Profile />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}